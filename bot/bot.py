from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters
import requests
import os

BOT_TOKEN = '7953140297:AAGwWVx3zwmo-9MbQ-UUU1764nljCxuncQU'
BASE_SITE_URL = 'https://wikimagic.onrender.com'
API_URL = BASE_SITE_URL  # –∏–ª–∏ –≤–∞—à API URL, –µ—Å–ª–∏ –æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è

# –•—Ä–∞–Ω–∏–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ {user_id: [list_of_referred_user_ids]}
active_sessions = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    ref_link = f"{BASE_SITE_URL}/?ref={user_id}"
    keyboard = [
        [InlineKeyboardButton("üîó –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=ref_link)],
        [InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ—Ö", callback_data="reset")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}!\n"
        f"–í–æ—Ç —Ç–≤–æ—è —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{ref_link}\n\n"
        "üîé –ü–æ–¥–µ–ª–∏—Å—å –µ—é, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å, —á—Ç–æ –∏—â—É—Ç –¥—Ä—É–≥–∏–µ!\n"
        "üîÑ –ù–∞–∂–º–∏ '–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ—Ö', —á—Ç–æ–±—ã –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ—Ö –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏—é",
        reply_markup=reply_markup
    )

async def reset(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—ã–∑–æ–≤ API –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤—Å–µ—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    await update.message.reply_text("–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –ø–µ—Ä–µ—à–µ–¥—à–∏–µ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ, –±—É–¥—É—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏—é.")

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    if query.data == "reset":
        user_id = query.from_user.id
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        try:
            response = requests.get(f"{API_URL}/reset_referrals?ref={user_id}")
            if response.status_code == 200:
                await query.edit_message_text(text="‚úÖ –í—Å–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã —Å–±—Ä–æ—à–µ–Ω—ã –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏—é!")
            else:
                await query.edit_message_text(text="‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤")
        except Exception as e:
            await query.edit_message_text(text=f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}")

if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("reset", reset))
    app.add_handler(MessageHandler(filters.CallbackQuery(), button))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()