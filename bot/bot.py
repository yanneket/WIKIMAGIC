import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters, CallbackQueryHandler
import requests

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

BOT_TOKEN = '7953140297:AAGwWVx3zwmo-9MbQ-UUU1764nljCxuncQU'
BASE_SITE_URL = 'https://wikimagic.onrender.com'

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_id = update.effective_user.id
        ref_link = f"{BASE_SITE_URL}/?ref={user_id}"
        
        keyboard = [
            [InlineKeyboardButton("üîó –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=ref_link)],
            [InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ—Ö", callback_data="reset")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            f"–ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}!\n"
            f"–í–æ—Ç —Ç–≤–æ—è —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{ref_link}\n\n"
            "üîé –ü–æ–¥–µ–ª–∏—Å—å –µ—é, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å, —á—Ç–æ –∏—â—É—Ç –¥—Ä—É–≥–∏–µ!\n"
            "üîÑ –ù–∞–∂–º–∏ '–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ—Ö', —á—Ç–æ–±—ã –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ—Ö –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏—é",
            reply_markup=reply_markup
        )
    except Exception as e:
        logger.error(f"Error in start: {e}")

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        query = update.callback_query
        await query.answer()
        
        if query.data == "reset":
            user_id = query.from_user.id
            try:
                response = requests.get(f"{BASE_SITE_URL}/reset_referrals?ref={user_id}")
                if response.status_code == 200:
                    await query.edit_message_text(text="‚úÖ –í—Å–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã —Å–±—Ä–æ—à–µ–Ω—ã –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏—é!")
                else:
                    await query.edit_message_text(text="‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤")
            except Exception as e:
                logger.error(f"API error: {e}")
                await query.edit_message_text(text=f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}")
    except Exception as e:
        logger.error(f"Error in button_handler: {e}")

def main():
    try:
        application = Application.builder().token(BOT_TOKEN).build()
        
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CallbackQueryHandler(button_handler))
        
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        application.run_polling()
    except Exception as e:
        logger.critical(f"Failed to start bot: {e}")

if __name__ == '__main__':
    main()